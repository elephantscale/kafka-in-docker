version: "3"
services:

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    ports:
      - 2181:2181
    restart: unless-stopped
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper_data_multi:/bitnami/zookeeper
    networks:
      - bobafett-net

  kafka1:
    image: 'bitnami/kafka:3'
    container_name: kafka1
    ports:
      - 19092   # just within docker network
      - 9092:9092   # localhost mapping
    restart: unless-stopped
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_JMX_PORT=9999  # for JMX metrics
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:19092,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka1:19092,EXTERNAL://localhost:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    volumes:
      - kafka1_data_multi:/bitnami/kafka
      - ./scripts/kafka-server-start.sh:/opt/bitnami/kafka/bin/kafka-server-start.sh  # custom-startup-script with JMX_PORT enabled
    networks:
      - bobafett-net


  kafka2:
    image: 'bitnami/kafka:3'
    container_name: kafka2
    ports:
      - 19092   # just within docker network
      - 9093:9093   # localhost mapping
    restart: unless-stopped
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_JMX_PORT=9999  # for JMX metrics
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:19092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka2:19092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    volumes:
      - kafka2_data_multi:/bitnami/kafka
      - ./scripts/kafka-server-start.sh:/opt/bitnami/kafka/bin/kafka-server-start.sh  # custom-startup-script with JMX_PORT enabled
    networks:
      - bobafett-net


  kafka3:
    image: 'bitnami/kafka:3'
    container_name: kafka3
    ports:
      - 19092   # just within docker network
      - 9094:9094   # localhost mapping
    restart: unless-stopped
    environment:
      - KAFKA_BROKER_ID=3
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_JMX_PORT=9999  # for JMX metrics
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:19092,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka3:19092,EXTERNAL://localhost:9094
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    volumes:
      - kafka3_data_multi:/bitnami/kafka
      - ./scripts/kafka-server-start.sh:/opt/bitnami/kafka/bin/kafka-server-start.sh  # custom-startup-script with JMX_PORT enabled
    networks:
      - bobafett-net


  kafka-manager:
    image: 'elephantscale/kafka-manager'
    container_name: kafka-manager
    depends_on:
      - zookeeper
    ports:
      - 9000:9000   # localhost mapping
    restart: unless-stopped
    environment:
      - ZK_HOSTS=zookeeper:2181
    networks:
      - bobafett-net


  graphite:
    image: graphiteapp/graphite-statsd
    container_name: graphite
    restart: always
    ports:
      - 2003:2003
    networks:
      - bobafett-net

  grafana:
    image: grafana/grafana:8.2.5
    container_name: grafana
    ports:
      - 3000
    environment:
      GF_PATHS_DATA: /var/lib/grafana
      GF_SECURITY_ADMIN_PASSWORD: kafka
    volumes:
      - './config/grafana/provisioning:/etc/grafana/provisioning'
      - './config/grafana/dashboards:/var/lib/grafana/dashboards'
    depends_on:
      - prometheus
    networks:
      - bobafett-net



  prometheus:
    image: prom/prometheus:v2.31.1
    container_name: prometheus
    ports:
      - 9090
    volumes:
      - './config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro'
    command: '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - bobafett-net

  nodeexporter:
    image: prom/node-exporter:v1.3.0
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    ports:
      - 9100
    networks:
      - bobafett-net


  jmx-kafka1:
    image: sscaling/jmx-prometheus-exporter
    container_name: jmx-kafka1
    ports:
      - 5556
    environment:
      CONFIG_YML: /etc/jmx_exporter/config.yml
      JVM_OPTS: '-Xmx512M'
    volumes:
      - './config/jmx_exporter/config_kafka1.yml:/etc/jmx_exporter/config.yml:ro'
    depends_on:
      - kafka1
    networks:
      - bobafett-net



  jmx-kafka2:
    image: sscaling/jmx-prometheus-exporter
    container_name: jmx-kafka2
    ports:
      - 5556
    environment:
      CONFIG_YML: /etc/jmx_exporter/config.yml
      JVM_OPTS: '-Xmx512M'
    volumes:
      - './config/jmx_exporter/config_kafka2.yml:/etc/jmx_exporter/config.yml:ro'
    depends_on:
      - kafka2
    networks:
      - bobafett-net



  jmx-kafka3:
    image: sscaling/jmx-prometheus-exporter
    container_name: jmx-kafka3
    ports:
      - 5556
    environment:
      CONFIG_YML: /etc/jmx_exporter/config.yml
      JVM_OPTS: '-Xmx512M'
    volumes:
      - './config/jmx_exporter/config_kafka3.yml:/etc/jmx_exporter/config.yml:ro'
    depends_on:
      - kafka3
    networks:
      - bobafett-net



  caddy:
    image: 'caddy:2.3.0'
    container_name: caddy
    ports:
      - '3000:3000'
      - '9090:9090'
    volumes:
      - './config/caddy:/etc/caddy'
    networks:
      - bobafett-net


volumes:
  zookeeper_data_multi:
    driver: local
  kafka1_data_multi:
    driver: local
  kafka2_data_multi:
    driver: local
  kafka3_data_multi:
    driver: local


networks:
  bobafett-net:
    driver: bridge
    name: bobafett-net
